package main

import (
	"encoding/json"
	"net/http"
)

type URLList struct {
	List []string
}

func handler(w http.ResponseWriter, req *http.Request) {

	w.Header().Set("Content-Type", "application/json")

	// TODO: Sanitize/Validate URL
	if req.Method == "GET" {
		url := req.URL.Path[12:]

		if req.URL.RawQuery != "" {
			url += "?" + req.URL.RawQuery
		}

		encoder := json.NewEncoder(w)
		respPayload := map[string]bool{url: true}
		encoder.Encode(respPayload)

		// TODO: Check database
		// TODO: Return Status Codes on failures

	} else if req.Method == "POST" {

		var urls URLList

		err := json.NewDecoder(req.Body).Decode(&urls)
		if err != nil {
			http.Error(w, err.Error(), http.StatusBadRequest)
			return
		}

		for i := 0; i < len(urls.List); i++ {
			// TODO: Insert URL into DB
			w.Write([]byte(urls.List[i]))
		}

		encoder := json.NewEncoder(w)
		respPayload := map[string]bool{"success": true}
		encoder.Encode(respPayload)

	} else {
		http.Error(w, "Method must be GET or POST. Refer to API docs for more info.", http.StatusMethodNotAllowed)
	}
}

func main() {

	http.HandleFunc("/v1/urlinfo/", handler)
	http.ListenAndServe(":8080", nil)

}
